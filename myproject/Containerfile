# Usa una imagen base de Python delgada
FROM python:3.11-slim

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV PIP_NO_CACHE_DIR=off
ENV PIP_DISABLE_PIP_VERSION_CHECK=on

WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq-dev \
    # build-essential gcc git # Ya los instalaste, Podman probablemente use cache aquí
    && rm -rf /var/lib/apt/lists/*

RUN pip install --upgrade pip

# Copia requirements.txt (desde el contexto myproject/) a /app/ en la imagen
COPY requirements.txt ./requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Copia TODO el contenido del contexto actual (myproject/) a /app/
# Esto incluye entrypoint.sh, manage.py, myapp/, etc.
COPY . .

# AHORA, dale permisos de ejecución al entrypoint.sh que acabas de copiar con COPY . .
RUN chmod +x /app/entrypoint.sh
# Y si manage.py también necesita ser ejecutable directamente (aunque python lo ejecuta)
# RUN chmod +x /app/manage.py

# Tu línea de depuración (puedes quitarla una vez que funcione)
RUN ls -la /app/entrypoint.sh && cat /app/entrypoint.sh && head -n 1 /app/entrypoint.sh | od -c

EXPOSE 8000

ENTRYPOINT ["/app/entrypoint.sh"]